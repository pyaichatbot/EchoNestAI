version: '3.8'

services:
  # PostgreSQL test database for backend-online tests
  postgres-test:
    image: postgres:15-alpine
    container_name: echonest-postgres-test
    environment:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_DB: test_db
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend online tests
  backend-online-tests:
    build:
      context: ..
      dockerfile: docker/backend-online.Dockerfile
    container_name: echonest-backend-online-tests
    depends_on:
      postgres-test:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://test:test@postgres-test:5432/test_db
      JWT_SECRET: test_jwt_secret_key
      ENVIRONMENT: test
      LOG_LEVEL: info
      UPLOAD_FOLDER: /app/data/uploads
      CONTENT_FOLDER: /app/data/content
      MODELS_FOLDER: /app/data/models
    volumes:
      - ../tests/backend-online:/app/tests
    command: >
      sh -c "pip install pytest pytest-asyncio httpx pytest-cov &&
             cd /app && 
             python -m pytest tests/ -v"

  # Backend offline tests
  backend-offline-tests:
    build:
      context: ..
      dockerfile: docker/backend-offline.Dockerfile
    container_name: echonest-backend-offline-tests
    environment:
      SQLITE_DB_PATH: ":memory:"
      JWT_SECRET: test_jwt_secret_key
      ENVIRONMENT: test
      LOG_LEVEL: info
      UPLOAD_FOLDER: /app/data/uploads
      CONTENT_FOLDER: /app/data/content
      MODELS_FOLDER: /app/data/models
    volumes:
      - ../tests/backend-offline:/app/tests
    command: >
      sh -c "pip install pytest pytest-asyncio httpx pytest-cov &&
             cd /app && 
             python -m pytest tests/ -v"
